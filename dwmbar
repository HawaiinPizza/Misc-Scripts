#!/usr/bin/env sh

# This script sets the statusbar with the xsetroot command at the end. Have it
# started by ~/.xinitrc or ~/.xprofile.

# Handle SIGTRAP signals sent by refbar to update the status bar immediately.
trap 'update' 5

# Set the deliminter character.
delim="|"

# testweather checks to see if the most recent forecast is up to date.  If it
# isn't, it downloads a new weather forecast, then signals to update the
# statusbar. Gets weather report from wttr.in.
testweather() { \
	[ "$(stat -c %y "$HOME/.local/share/weatherreport" 2>/dev/null | cut -d' ' -f1)" != "$(date '+%Y-%m-%d')" ] &&
		ping -q -c 1 1.1.1.1 >/dev/null &&
		curl -s "wttr.in/$location" > "$HOME/.local/share/weatherreport" &&
		notify-send "🌞 Weather" "New weather forecast for today." &&
		refbar
		}

CalcurseRemind(){
	calcurse -n | sed -e '/appointment/d' -e 's/\W*/\[/' -e 's/\[//' -e 's/\]//'
	echo "::"
	calcurse -a -l 1 | sed -e '1,2d' -e 's/^\W*//'
	tmp=$(mktemp)
	calcurse -a  | sed '1d' > $tmp
	Next=$(calcurse -n | sed -e '/appointment/d' -e 's/\W*/\[/' -e 's/\[//' -e 's/\]//'  | sed 's/^......//')
	grep -B 3 "$Next" $tmp  | sed -e '3,4d'  -e '1d' -e 's/^\W*//'
	printf "\n\n"


}


PrayTime(){
#	Time=$(date --date=$Time +%s)
#	PrayerTime=$(date --date=$PrayerTime +%s)
#	echo $PrayerName $(date --date=@$PrayerTime "+%H:%M") Time Remain $(date --date=@$(($PrayerTime-$Time)) "+%D %H:%M")
	Time=$1
	PrayT=$2
	PrayN=$3
	TimeHH=$(date --date=$Time +%s | sed 's/^0//')
	PrayTT=$(date --date=$PrayT +%s | sed 's/^0//')
	Diff=$(( ($PrayTT-$TimeHH) / 60 )) 
	Hour=$(($Diff/60))
	Minute=$(($Diff%60))

	if [ $(echo $Hour | wc -c) -eq 2 ]; then
		Hour=0$Hour
	fi
	if [ $(echo $Minute | wc -c) -eq 2 ]; then
		Minute=0$Minute
	fi

	echo $PrayN at ${PrayT:0:2}:${PrayT:2}  $Hour:$Minute Remaining


}
Prayer(){
	PrayerTime=~/.local/share/Prayer/PrayerData

	Time=$(date +"%H%M")
	Date="$(date +'%d' )"
	Line=$(cat $PrayerTime | sed $Date!d )
	Faj=$(echo $Line | awk '{print $4}' | sed 's/://')
	Dhur=$(echo $Line | awk '{print $6}'| sed 's/://')
	Asr=$(echo $Line | awk '{print $7}' | sed 's/://')
	Mag=$(echo $Line | awk '{print $8}' | sed 's/://')
	Ish=$(echo $Line | awk '{print $9}' | sed 's/://')
	Time=$(echo $Time | sed 's/^0//')


	if	 [ "$Time" -lt "$Faj" ]; then
		PrayTime $Time $Faj Faj
	elif	[ "$Time" -lt "$Dhur" ]; then
		PrayTime $Time $Dhur Dhur
	elif	[ "$Time" -lt "$Asr" ]; then
		PrayTime $Time $Asr Asr
	elif	[ "$Time" -lt "$Mag" ]; then
		PrayTime $Time $Mag Mag
	elif	[ "$Time" -lt "$Ish" ]; then
		PrayTime $Time $Ish Ish
	else
		echo Fajir Tomorrow
	fi


}

# Here is the (big) function that outputs the appearance of the statusbar. It
# can really be broken down into many submodules which I've commented and
# explained.
status() { \

	# Get current mpd track filename or artist - title if possible.
	mpc -f "[[%artist% - ]%title%]|[%file%]" 2>/dev/null | grep -v "volume:" | head -n 1 && echo "$delim"

#	# If the weather report is current, show daily precipitation chance,
#	# low and high.  Don't even bother to understand this one unless you
#	# have all day. Takes the weather report format from wttr.in and makes
#	# it look like how I want it for the status bar.
#	[ "$(stat -c %y "$HOME/.local/share/weatherreport" 2>/dev/null | cut -d' ' -f1)" = "$(date '+%Y-%m-%d')" ] &&
#		sed '16q;d' "$HOME/.local/share/weatherreport" | grep -wo "[0-9]*%" | sort -n | sed -e '$!d' | sed -e "s/^/ /g" | tr -d '\n' &&
#		sed '13q;d' "$HOME/.local/share/weatherreport" | grep -o "m\\(-\\)*[0-9]\\+" | sort -n -t 'm' -k 2n | sed -e 1b -e '$!d' | tr '\n|m' ' ' | awk '{print " ",$1 "°","",$2 "°"}' &&
#		echo "$delim"

	# Get the volume of ALSA's master volume output.  Show an icon if or
	# not muted.
	amixer get Master | grep -o "[0-9]*%\|\[on\]\|\[off\]" | sed "s/\[on\]//;s/\[off\]//"

	echo "$delim"

#	# Wifi quality percentage and  icon if ethernet is connected.
#	grep "^\s*w" /proc/net/wireless | awk '{ print "", int($3 * 100 / 70) "%|" }'
#	sed "s/down//;s/up//" /sys/class/net/e*/operstate


	# Will show all batteries with approximate icon for remaining power.
	for x in /sys/class/power_supply/BAT?/capacity;
	do
		bat=$(acpi | awk '{print $4}' | sed 's/%.*//')
	case "$(cat $x)" in
		100|9[0-9])	echo "$bat% " ;;
		8[0-9]|7[0-9])	echo "$bat% " ;;
		6[0-9]|5[0-9])	echo "$bat% " ;;
		4[0-9]|3[0-9])	echo "$bat% " ;;
		*)		echo "$bat% " ;;
	esac
	done && echo "$delim"

	# Date and time.
	CalcurseRemind
	echo "$delim"
	Prayer

	echo "$delim"
	date '+%Y %b %d (%a) %I:%M%p'

	}
update() { \
	# So all that big status function was just a command that quicking gets
	# what we want to be the statusbar. This xsetroot command is what sets
	# it. Note that the tr command replaces newlines with spaces. This is
	# to prevent some weird issues that cause significant slowing of
	# everything in dwm. Note entirely sure of the cause, but again, the tr
	# command easily avoids it.
	xsetroot -name "$(status | tr '\n' ' ')" &
    wait

	# Check to see if new weather report is needed.
	#testweather &
    #wait
    }


while :; do
    update
	# Sleep for a minute after changing the status bar before updating it
	# again. We run sleep in the background and use wait until it finishes,
    # because traps can interrupt wait immediately, but they can't do that
    # with sleep.
	sleep 1m &
    wait
done
